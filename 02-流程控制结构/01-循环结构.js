//文件路径 ../02-流程控制结构/01-循环结构.ts
//[001] while循环结构
//说明：while语句用来在满足判断条件的情况下重复执行一段代码,代码在执行的时候会先检查判断条件是否满足，
//如果条件满足则执行循环体（更新条件变量）,否则就结束当前循环执行后面的代码，重复这个过程
var i = 0;
while (i < 5) {
    i++;
    console.log(i);
}
//[002] do..while循环结构
//说明：do...while循环结构能够保证循环体至少会被执行一次,当循环体执行完后，代码会检查判断条件是否满足,
//如果满足条件则继续执行循环体，否则就结束当前循环执行后面的代码，重复这个过程
var j = 5;
do {
    j--;
    console.log(j);
} while (j < 0);
//[003] for循环
//说明:执行for循环的时候的执行顺序为
//(1) 执行初始化语句，初始化变量n
//(2) 检查是否满足循环条件
//    A: 如果满足循环条件，那么就执行循环体,并跳转到（3）
//    B: 如果不满足循环条件，那么就结束当前循环，继续执行后面的任务
//(3) 更新循环变量，这里为n++操作
//(4) 跳转到（2）
//关于break、continue和return
//在循环体中，如果遇到break和return则表示结束循环(循环本身以及循环内后面的代码不再执行)，执行循环后面的任务
//如果遇到continue则表示结束当前循环，继续执行后面的循环任务
for (var n = 0; n < 5; n++) {
    n++;
    console.log(n);
}
//[004] for..in循环
//说明:for..in循环主要用于遍历代码中的对象
//注意：不推荐使用for..in循环来遍历数组或伪数组对象，因为它会把原型成员迭代出来。
var obj = { name: "zs", age: 18, "des": "描述信息" };
for (var key in obj) {
    console.log("当前循环的key:" + key + "value:" + obj[key]);
}
